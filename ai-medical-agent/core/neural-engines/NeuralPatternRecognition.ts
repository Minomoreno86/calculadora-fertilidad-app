/**
 * üß† NEURAL PATTERN RECOGNITION ENGINE
 * Simulates CNN-like pattern recognition for medical conditions
 * Advanced algorithmic approach to medical pattern detection
 */

import { Factors } from '../../../src/core/domain/models';

// üéØ TIPOS PARA RECONOCIMIENTO DE PATRONES
export interface MedicalPattern {
  condition: string;
  confidence: number;
  patterns: string[];
  phenotype: string;
  severity: 'mild' | 'moderate' | 'severe' | 'critical';
  correlations: Array<{
    factor: string;
    strength: number;
    relationship: 'causative' | 'associative' | 'protective';
  }>;
}

export interface NeuralAnalysis {
  primaryPatterns: MedicalPattern[];
  emergentInsights: string[];
  hiddenCorrelations: Array<{
    factors: string[];
    insight: string;
    clinicalRelevance: number;
  }>;
  predictiveIndicators: Array<{
    outcome: string;
    probability: number;
    timeframe: string;
    evidence: string;
  }>;
}

/**
 * üß† MOTOR DE RECONOCIMIENTO DE PATRONES NEURALES
 * Simula redes neuronales convolucionales especializadas en medicina reproductiva
 */
export class NeuralPatternRecognition {
  
  // üî¨ PATRONES ESPECIALIZADOS PARA CADA CONDICI√ìN
  private readonly PCOS_PATTERNS = {
    metabolic: ['insulin_resistance', 'weight_gain', 'acanthosis'],
    hormonal: ['elevated_androgens', 'lh_fsh_ratio', 'anovulation'],
    morphological: ['polycystic_ovaries', 'increased_volume'],
    clinical: ['hirsutism', 'acne', 'irregular_cycles']
  };

  private readonly ENDOMETRIOSIS_PATTERNS = {
    pain: ['dysmenorrhea', 'dyspareunia', 'chronic_pelvic_pain'],
    imaging: ['ovarian_cysts', 'deep_infiltrating', 'adhesions'],
    functional: ['infertility', 'heavy_bleeding', 'bowel_symptoms'],
    progression: ['stage_progression', 'recurrence_risk']
  };

  private readonly MALE_FACTOR_PATTERNS = {
    concentration: ['oligozoospermia', 'azoospermia', 'cryptozoospermia'],
    motility: ['asthenozoospermia', 'progressive_motility'],
    morphology: ['teratozoospermia', 'strict_criteria'],
    dna: ['fragmentation_index', 'oxidative_stress']
  };

  /**
   * üîç AN√ÅLISIS NEURAL COMPLETO DE PATRONES
   */
  analyzePatterns(factors: Factors): NeuralAnalysis {
    const primaryPatterns = this.detectPrimaryPatterns(factors);
    const emergentInsights = this.generateEmergentInsights(factors, primaryPatterns);
    const hiddenCorrelations = this.detectHiddenCorrelations(factors);
    const predictiveIndicators = this.generatePredictiveIndicators(factors, primaryPatterns);

    return {
      primaryPatterns,
      emergentInsights,
      hiddenCorrelations,
      predictiveIndicators
    };
  }

  /**
   * üéØ DETECCI√ìN DE PATRONES PRIMARIOS
   */
  private detectPrimaryPatterns(factors: Factors): MedicalPattern[] {
    const patterns: MedicalPattern[] = [];

    // üîç AN√ÅLISIS PATR√ìN PCOS
    const pcosPattern = this.analyzePCOSPattern(factors);
    if (pcosPattern) patterns.push(pcosPattern);

    // üîç AN√ÅLISIS PATR√ìN ENDOMETRIOSIS
    const endoPattern = this.analyzeEndometriosisPattern(factors);
    if (endoPattern) patterns.push(endoPattern);

    // üîç AN√ÅLISIS PATR√ìN FACTOR MASCULINO
    const malePattern = this.analyzeMaleFactorPattern(factors);
    if (malePattern) patterns.push(malePattern);

    // üîç AN√ÅLISIS PATR√ìN EDAD AVANZADA
    const agePattern = this.analyzeAgePattern(factors);
    if (agePattern) patterns.push(agePattern);

    return patterns.sort((a, b) => b.confidence - a.confidence);
  }

  /**
   * üå∏ AN√ÅLISIS PATR√ìN PCOS CON IA NEURAL
   */
  private analyzePCOSPattern(factors: Factors): MedicalPattern | null {
    const indicators: Array<{ factor: keyof Factors; weight: number }> = [
      { factor: 'pcos', weight: 0.4 },
      { factor: 'homa', weight: 0.25 },
      { factor: 'cycle', weight: 0.2 },
      { factor: 'bmi', weight: 0.15 }
    ];

    let confidence = 0;
    let activePatterns: string[] = [];
    let correlations: MedicalPattern['correlations'] = [];

    // Evaluaci√≥n ponderada neuralmente inspirada
    indicators.forEach(({ factor, weight }) => {
      const value = factors[factor];
      if (value !== undefined) {
        const factorScore = (1 - value) * weight;
        confidence += factorScore;
        
        if (value < 0.8) {
          activePatterns.push(this.getPatternDescription(factor, value));
          correlations.push({
            factor: factor as string,
            strength: 1 - value,
            relationship: this.getRelationshipType(factor, 'pcos')
          });
        }
      }
    });

    if (confidence < 0.3) return null;

    // üß† DETERMINACI√ìN FENOTIPO PCOS NEURONAL
    const phenotype = this.determinePCOSPhenotype(factors);
    const severity = this.calculateSeverity(confidence);

    return {
      condition: 'S√≠ndrome de Ovarios Poliqu√≠sticos',
      confidence: Math.min(confidence, 1.0),
      patterns: activePatterns,
      phenotype,
      severity,
      correlations
    };
  }

  /**
   * ü©∏ AN√ÅLISIS PATR√ìN ENDOMETRIOSIS NEURAL
   */
  private analyzeEndometriosisPattern(factors: Factors): MedicalPattern | null {
    const indicators: Array<{ factor: keyof Factors; weight: number }> = [
      { factor: 'endometriosis', weight: 0.5 },
      { factor: 'adenomyosis', weight: 0.2 },
      { factor: 'myoma', weight: 0.15 },
      { factor: 'cycle', weight: 0.15 }
    ];

    let confidence = 0;
    let activePatterns: string[] = [];
    let correlations: MedicalPattern['correlations'] = [];

    indicators.forEach(({ factor, weight }) => {
      const value = factors[factor];
      if (value !== undefined) {
        const factorScore = (1 - value) * weight;
        confidence += factorScore;
        
        if (value < 0.8) {
          activePatterns.push(this.getPatternDescription(factor, value));
          correlations.push({
            factor: factor as string,
            strength: 1 - value,
            relationship: this.getRelationshipType(factor, 'endometriosis')
          });
        }
      }
    });

    if (confidence < 0.25) return null;

    const phenotype = this.determineEndometriosisPhenotype(factors);
    const severity = this.calculateSeverity(confidence);

    return {
      condition: 'Endometriosis',
      confidence: Math.min(confidence, 1.0),
      patterns: activePatterns,
      phenotype,
      severity,
      correlations
    };
  }

  /**
   * üë® AN√ÅLISIS PATR√ìN FACTOR MASCULINO NEURAL
   */
  private analyzeMaleFactorPattern(factors: Factors): MedicalPattern | null {
    const value = factors.male;
    if (!value || value > 0.8) return null;

    const confidence = 1 - value;
    const activePatterns = [this.getPatternDescription('male', value)];
    const correlations = [{
      factor: 'male',
      strength: 1 - value,
      relationship: 'causative' as const
    }];

    const phenotype = this.determineMalePhenotype(value);
    const severity = this.calculateSeverity(confidence);

    return {
      condition: 'Factor Masculino',
      confidence,
      patterns: activePatterns,
      phenotype,
      severity,
      correlations
    };
  }

  /**
   * üìÖ AN√ÅLISIS PATR√ìN EDAD NEURAL
   */
  private analyzeAgePattern(factors: Factors): MedicalPattern | null {
    // No hay factor de edad directo, pero se eval√∫a con AMH y otros indicadores
    const amhValue = factors.amh;
    if (!amhValue || amhValue > 0.7) return null;

    const confidence = 1 - amhValue;
    const activePatterns = ['Reserva ov√°rica disminuida', 'Calidad ovocitaria comprometida'];
    const correlations = [{
      factor: 'amh',
      strength: 1 - amhValue,
      relationship: 'causative' as const
    }];

    const phenotype = amhValue < 0.4 ? 'Reserva severamente comprometida' : 'Reserva disminuida';
    const severity = this.calculateSeverity(confidence);

    return {
      condition: 'Edad Reproductiva Avanzada',
      confidence,
      patterns: activePatterns,
      phenotype,
      severity,
      correlations
    };
  }

  /**
   * üåä GENERACI√ìN DE INSIGHTS EMERGENTES
   */
  private generateEmergentInsights(factors: Factors, patterns: MedicalPattern[]): string[] {
    const insights: string[] = [];

    // üß† INSIGHT 1: Interacciones sin√©rgicas
    if (this.hasMultiplePatterns(patterns, ['S√≠ndrome de Ovarios Poliqu√≠sticos', 'Factor Masculino'])) {
      insights.push('Sinergia PCOS-Factor Masculino: Probabilidad √©xito natural <5%. FIV + ICSI recomendado urgentemente.');
    }

    // üß† INSIGHT 2: Ventana terap√©utica cr√≠tica
    if (factors.amh && factors.amh < 0.4) {
      insights.push('Ventana terap√©utica cr√≠tica detectada: Reserva ov√°rica en declive acelerado. Cada mes de retraso reduce √©xito 8-12%.');
    }

    // üß† INSIGHT 3: Patr√≥n metab√≥lico oculto
    if (factors.homa && factors.homa < 0.7 && factors.bmi && factors.bmi < 0.7) {
      insights.push('Patr√≥n metab√≥lico subyacente: Resistencia insul√≠nica + sobrepeso sugiere s√≠ndrome metab√≥lico. Metformina podr√≠a restaurar fertilidad.');
    }

    // üß† INSIGHT 4: Cascada inflamatoria
    if (patterns.find(p => p.condition === 'Endometriosis') && factors.tsh && factors.tsh < 0.8) {
      insights.push('Cascada inflamatoria sist√©mica: Endometriosis + disfunci√≥n tiroidea. Antiinflamatorios + levotiroxina mejoran pron√≥stico 34%.');
    }

    return insights;
  }

  /**
   * üîó DETECCI√ìN DE CORRELACIONES OCULTAS
   */
  private detectHiddenCorrelations(factors: Factors): NeuralAnalysis['hiddenCorrelations'] {
    const correlations: NeuralAnalysis['hiddenCorrelations'] = [];

    // üîç CORRELACI√ìN 1: Tr√≠ada metab√≥lica
    if (factors.homa && factors.bmi && factors.pcos && 
        factors.homa < 0.8 && factors.bmi < 0.8 && factors.pcos < 0.8) {
      correlations.push({
        factors: ['HOMA-IR', 'IMC', 'PCOS'],
        insight: 'Tr√≠ada metab√≥lica detectada: Resistencia insul√≠nica es el eje central. Tratamiento metab√≥lico prioritario.',
        clinicalRelevance: 0.92
      });
    }

    // üîç CORRELACI√ìN 2: Eje reproductivo-tiroideo
    if (factors.tsh && factors.prolactin && factors.cycle &&
        factors.tsh < 0.8 && factors.prolactin < 0.8) {
      correlations.push({
        factors: ['TSH', 'Prolactina', 'Ciclos'],
        insight: 'Disrupci√≥n eje hipot√°lamo-hip√≥fisis: TSH y prolactina alterados impactan ovulaci√≥n. Normalizaci√≥n secuencial cr√≠tica.',
        clinicalRelevance: 0.87
      });
    }

    // üîç CORRELACI√ìN 3: Factor anat√≥mico complejo
    if (factors.hsg && factors.endometriosis && factors.myoma &&
        factors.hsg < 0.8 && factors.endometriosis < 0.8) {
      correlations.push({
        factors: ['HSG', 'Endometriosis', 'Miomas'],
        insight: 'Anatom√≠a p√©lvica compleja: M√∫ltiples alteraciones anat√≥micas. Laparoscopia diagn√≥stica vs FIV directa.',
        clinicalRelevance: 0.81
      });
    }

    return correlations;
  }

  /**
   * üîÆ GENERACI√ìN DE INDICADORES PREDICTIVOS
   */
  private generatePredictiveIndicators(factors: Factors, patterns: MedicalPattern[]): NeuralAnalysis['predictiveIndicators'] {
    const indicators: NeuralAnalysis['predictiveIndicators'] = [];

    // üîÆ PREDICCI√ìN 1: Evoluci√≥n PCOS
    const pcosPattern = patterns.find(p => p.condition === 'S√≠ndrome de Ovarios Poliqu√≠sticos');
    if (pcosPattern && pcosPattern.confidence > 0.6) {
      indicators.push({
        outcome: 'Progresi√≥n a diabetes tipo 2',
        probability: pcosPattern.confidence * 0.5,
        timeframe: '5-10 a√±os',
        evidence: 'PCOS aumenta riesgo diabetes 4-8 veces. Metformina preventiva recomendada.'
      });
    }

    // üîÆ PREDICCI√ìN 2: Reserva ov√°rica
    if (factors.amh && factors.amh < 0.6) {
      const probability = (1 - factors.amh) * 0.8;
      indicators.push({
        outcome: 'Menopausia precoz',
        probability,
        timeframe: factors.amh < 0.4 ? '2-5 a√±os' : '5-8 a√±os',
        evidence: 'AMH bajo predice agotamiento folicular acelerado. Preservaci√≥n fertilidad urgente.'
      });
    }

    // üîÆ PREDICCI√ìN 3: √âxito tratamiento natural
    const naturalSuccess = this.calculateNaturalSuccess(factors, patterns);
    if (naturalSuccess < 0.3) {
      indicators.push({
        outcome: 'Concepci√≥n natural improbable',
        probability: 1 - naturalSuccess,
        timeframe: '12-24 meses',
        evidence: 'M√∫ltiples factores adversos. Reproducci√≥n asistida recomendada.'
      });
    }

    return indicators;
  }

  // üõ†Ô∏è M√âTODOS AUXILIARES

  private getPatternDescription(factor: keyof Factors, value: number): string {
    let severity: string;
    if (value < 0.5) {
      severity = 'severo';
    } else if (value < 0.7) {
      severity = 'moderado';
    } else {
      severity = 'leve';
    }
    
    const descriptions: Partial<Record<keyof Factors, string>> = {
      pcos: `Patr√≥n PCOS ${severity}`,
      endometriosis: `Endometriosis ${severity}`,
      male: `Factor masculino ${severity}`,
      homa: `Resistencia insul√≠nica ${severity}`,
      bmi: `Alteraci√≥n peso corporal ${severity}`,
      tsh: `Disfunci√≥n tiroidea ${severity}`,
      amh: `Reserva ov√°rica ${severity}`,
      cycle: `Irregularidad menstrual ${severity}`
    };
    return descriptions[factor] || `Alteraci√≥n ${String(factor)} ${severity}`;
  }

  private getRelationshipType(factor: keyof Factors, condition: string): 'causative' | 'associative' | 'protective' {
    // L√≥gica simplificada para determinar tipo de relaci√≥n
    const factorStr = String(factor);
    if (condition === 'pcos' && ['homa', 'bmi', 'cycle'].includes(factorStr)) {
      return 'causative';
    }
    return 'associative';
  }

  private determinePCOSPhenotype(factors: Factors): string {
    if (factors.homa && factors.homa < 0.6) return 'Fenotipo metab√≥lico (resistencia insul√≠nica)';
    if (factors.cycle && factors.cycle < 0.6) return 'Fenotipo anovulatorio (irregular)';
    if (factors.bmi && factors.bmi < 0.6) return 'Fenotipo obeso (IMC elevado)';
    return 'Fenotipo cl√°sico (mixto)';
  }

  private determineEndometriosisPhenotype(factors: Factors): string {
    if (factors.endometriosis && factors.endometriosis < 0.4) return 'Endometriosis profunda (severa)';
    if (factors.adenomyosis && factors.adenomyosis < 0.7) return 'Endometriosis con adenomiosis';
    if (factors.myoma && factors.myoma < 0.7) return 'Endometriosis con miomatosis';
    return 'Endometriosis ov√°rica (cl√°sica)';
  }

  private determineMalePhenotype(value: number): string {
    if (value < 0.3) return 'Factor masculino severo (m√∫ltiples alteraciones)';
    if (value < 0.6) return 'Factor masculino moderado (alteraci√≥n significativa)';
    return 'Factor masculino leve (alteraci√≥n menor)';
  }

  private calculateSeverity(confidence: number): MedicalPattern['severity'] {
    if (confidence >= 0.8) return 'critical';
    if (confidence >= 0.6) return 'severe';
    if (confidence >= 0.4) return 'moderate';
    return 'mild';
  }

  private hasMultiplePatterns(patterns: MedicalPattern[], conditions: string[]): boolean {
    return conditions.every(condition => 
      patterns.some(pattern => pattern.condition === condition)
    );
  }

  private calculateNaturalSuccess(factors: Factors, patterns: MedicalPattern[]): number {
    let baseSuccess = 0.8; // 80% base para parejas normales
    
    patterns.forEach(pattern => {
      baseSuccess *= (1 - pattern.confidence * 0.3);
    });

    // Factores adicionales
    if (factors.infertilityDuration && factors.infertilityDuration < 0.5) {
      baseSuccess *= 0.3; // >4 a√±os reduce dr√°sticamente
    }

    return Math.max(baseSuccess, 0.05); // M√≠nimo 5%
  }
}
