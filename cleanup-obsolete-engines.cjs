#!/usr/bin/env node

/**
 * üßπ CLEANUP OBSOLETE ENGINES V1.0 - APP STORE CONSOLIDATION
 * 
 * Script para eliminar motores de c√°lculo obsoletos y consolidar arquitectura.
 * OBJETIVO: Preparar c√≥digo limpio para App Store.
 */

const fs = require('fs');
const path = require('path');

// Archivos a mover a carpeta de backup antes de eliminar
const OBSOLETE_ENGINES = [
  'src/core/domain/services/simpleFertilityEngine.ts',
  'src/core/domain/services/calculationEngineUnified.ts', 
  'src/core/domain/services/smartFertilityEngine.ts'
];

// Carpeta de backup
const BACKUP_DIR = 'src/core/deprecated-engines-backup';

console.log('üßπ INICIANDO LIMPIEZA ARQUITECTURAL PARA APP STORE...\n');

// Crear carpeta de backup
if (!fs.existsSync(BACKUP_DIR)) {
  fs.mkdirSync(BACKUP_DIR, { recursive: true });
  console.log(`‚úÖ Creada carpeta de backup: ${BACKUP_DIR}`);
}

// Mover archivos obsoletos a backup
OBSOLETE_ENGINES.forEach(enginePath => {
  const fullPath = path.resolve(enginePath);
  
  if (fs.existsSync(fullPath)) {
    const fileName = path.basename(enginePath);
    const backupPath = path.join(BACKUP_DIR, fileName);
    
    try {
      // Leer contenido del archivo
      const content = fs.readFileSync(fullPath, 'utf8');
      
      // Escribir en backup con comentario de deprecaci√≥n
      const deprecatedContent = `/**
 * ‚ö†Ô∏è DEPRECATED ENGINE - MOVED TO BACKUP
 * 
 * Este archivo ha sido movido a backup como parte de la consolidaci√≥n
 * arquitectural para App Store. Ya no se usa en producci√≥n.
 * 
 * Motor de reemplazo: ModularFertilityEngine
 * Fecha de deprecaci√≥n: ${new Date().toISOString()}
 */

${content}`;
      
      fs.writeFileSync(backupPath, deprecatedContent);
      
      // Eliminar archivo original
      fs.unlinkSync(fullPath);
      
      console.log(`‚úÖ Movido a backup: ${enginePath} ‚Üí ${backupPath}`);
    } catch (error) {
      console.error(`‚ùå Error procesando ${enginePath}:`, error.message);
    }
  } else {
    console.log(`‚ö†Ô∏è No encontrado: ${enginePath}`);
  }
});

// Crear archivo README en backup
const readmeContent = `# üóÑÔ∏è DEPRECATED ENGINES BACKUP

Esta carpeta contiene motores de c√°lculo obsoletos que fueron removidos
durante la consolidaci√≥n arquitectural para App Store.

## Motores Consolidados

Todos los c√°lculos ahora usan **ModularFertilityEngine** que proporciona:

- ‚úÖ Arquitectura modular limpia
- ‚úÖ Cache inteligente unificado  
- ‚úÖ Performance optimizado
- ‚úÖ Mantenimiento simplificado
- ‚úÖ API consistente

## Archivos en Backup

${OBSOLETE_ENGINES.map(engine => `- ${path.basename(engine)}`).join('\n')}

## Migraci√≥n Completada

Fecha: ${new Date().toISOString()}
Motivo: Preparaci√≥n para App Store
Sistema de reemplazo: ModularFertilityEngine
`;

fs.writeFileSync(path.join(BACKUP_DIR, 'README.md'), readmeContent);

console.log(`\n‚úÖ LIMPIEZA COMPLETADA EXITOSAMENTE!`);
console.log(`üìÅ Archivos respaldados en: ${BACKUP_DIR}`);
console.log(`üéØ Arquitectura consolidada para App Store`);
console.log(`‚ö° Ahora solo usa ModularFertilityEngine`);
